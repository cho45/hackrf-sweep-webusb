{"version":3,"file":"comlink.js","sources":["../../src/comlink.ts"],"sourcesContent":["/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType\n} from \"./protocol.js\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nconst throwSet = new WeakSet();\n\n// prettier-ignore\ntype Promisify<T> = T extends { [proxyMarker]: boolean }\n  ? Promise<Remote<T>>\n  : T extends Promise<any>\n    ? T\n    : T extends (...args: infer R1) => infer R2\n      ? (...args: R1) => Promisify<R2>\n      : Promise<T>;\n\n// prettier-ignore\nexport type Remote<T> =\n  (\n    T extends (...args: infer R1) => infer R2\n      ? (...args: R1) => Promisify<R2>\n      : { [K in keyof T]: Promisify<T[K]> }\n  ) & (\n    T extends { new (...args: infer R1): infer R2 }\n      ? { new (...args: R1): Promise<Remote<R2>> }\n      : unknown\n  );\n\nexport interface TransferHandler {\n  canHandle(obj: any): boolean;\n  serialize(obj: any): [any, Transferable[]];\n  deserialize(obj: any): any;\n}\n\nexport const transferHandlers = new Map<string, TransferHandler>([\n  [\n    \"proxy\",\n    {\n      canHandle: obj => obj && obj[proxyMarker],\n      serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n      },\n      deserialize: (port: MessagePort) => {\n        port.start();\n        return wrap(port);\n      }\n    }\n  ],\n  [\n    \"throw\",\n    {\n      canHandle: obj => throwSet.has(obj),\n      serialize(obj) {\n        const isError = obj instanceof Error;\n        let serialized = obj;\n        if (isError) {\n          serialized = {\n            isError,\n            message: obj.message,\n            stack: obj.stack\n          };\n        }\n        return [serialized, []];\n      },\n      deserialize(obj) {\n        if ((obj as any).isError) {\n          throw Object.assign(new Error(), obj);\n        }\n        throw obj;\n      }\n    }\n  ]\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", (async (ev: MessageEvent) => {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message)\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = await rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = await rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = await new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        default:\n          console.warn(\"Unrecognized message\", ev.data);\n      }\n    } catch (e) {\n      returnValue = e;\n      throwSet.add(e);\n    }\n    const [wireValue, transferables] = toWireValue(returnValue);\n    ep.postMessage({ ...wireValue, id }, transferables);\n  }) as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nexport function wrap<T>(ep: Endpoint): Remote<T> {\n  return createProxy<T>(ep) as any;\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = []\n): Remote<T> {\n  const proxy: Function = new Proxy(function() {}, {\n    get(_target, prop) {\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map(p => p.toString())\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map(p => p.toString()),\n          value\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map(p => p.toString()),\n          argumentList\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map(p => p.toString()),\n          argumentList\n        },\n        transferables\n      ).then(fromWireValue);\n    }\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map(v => v[0]), myFlat(processed.map(v => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer(obj: any, transfers: Transferable[]) {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & { [proxyMarker]: true } {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, \"*\", transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context)\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue\n        },\n        transferables\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value\n    },\n    transferCache.get(value) || []\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise(resolve => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n"],"names":[],"mappings":"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"}