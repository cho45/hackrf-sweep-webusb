const e=Symbol("Comlink.proxy"),t=Symbol("Comlink.endpoint"),n=new WeakSet,a=new Map([["proxy",{canHandle:t=>t&&t[e],serialize(e){const{port1:t,port2:n}=new MessageChannel;return r(e,t),[n,[n]]},deserialize:e=>(e.start(),s(e))}],["throw",{canHandle:e=>n.has(e),serialize(e){const t=e instanceof Error;let n=e;return t&&(n={isError:t,message:e.message,stack:e.stack}),[n,[]]},deserialize(e){if(e.isError)throw Object.assign(new Error,e);throw e}}]]);function r(e,t=self){t.addEventListener("message",async a=>{if(!a||!a.data)return;const{id:s,type:o,path:i}={path:[],...a.data},p=(a.data.argumentList||[]).map(l);let m;try{const t=i.slice(0,-1).reduce((e,t)=>e[t],e),s=i.reduce((e,t)=>e[t],e);switch(o){case 0:m=await s;break;case 1:t[i.slice(-1)[0]]=l(a.data.value),m=!0;break;case 2:m=await s.apply(t,p);break;case 3:m=u(await new s(...p));break;case 4:{const{port1:t,port2:n}=new MessageChannel;r(e,n),m=c(t,[t])}break;default:console.warn("Unrecognized message",a.data)}}catch(e){m=e,n.add(e)}const[g,f]=d(m);t.postMessage({...g,id:s},f)}),t.start&&t.start()}function s(e){return function e(n,a=[]){const r=new Proxy(function(){},{get(t,s){if("then"===s){if(0===a.length)return{then:()=>r};const e=m(n,{type:0,path:a.map(e=>e.toString())}).then(l);return e.then.bind(e)}return e(n,[...a,s])},set(e,t,r){const[s,o]=d(r);return m(n,{type:1,path:[...a,t].map(e=>e.toString()),value:s},o).then(l)},apply(r,s,i){const c=a[a.length-1];if(c===t)return m(n,{type:4}).then(l);if("bind"===c)return e(n,a.slice(0,-1));const[u,p]=o(i);return m(n,{type:2,path:a.map(e=>e.toString()),argumentList:u},p).then(l)},construct(e,t){const[r,s]=o(t);return m(n,{type:3,path:a.map(e=>e.toString()),argumentList:r},s).then(l)}});return r}(e)}function o(e){const t=e.map(d);return[t.map(e=>e[0]),(n=t.map(e=>e[1]),Array.prototype.concat.apply([],n))];var n}const i=new WeakMap;function c(e,t){return i.set(e,t),e}function u(t){return Object.assign(t,{[e]:!0})}function p(e,t=self){return{postMessage:(t,n)=>e.postMessage(t,"*",n),addEventListener:t.addEventListener.bind(t),removeEventListener:t.removeEventListener.bind(t)}}function d(e){for(const[t,n]of a)if(n.canHandle(e)){const[a,r]=n.serialize(e);return[{type:3,name:t,value:a},r]}return[{type:0,value:e},i.get(e)||[]]}function l(e){switch(e.type){case 3:return a.get(e.name).deserialize(e.value);case 0:return e.value}}function m(e,t,n){return new Promise(a=>{const r=new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-");e.addEventListener("message",function t(n){n.data&&n.data.id&&n.data.id===r&&(e.removeEventListener("message",t),a(n.data))}),e.start&&e.start(),e.postMessage({id:r,...t},n)})}export{t as createEndpoint,r as expose,u as proxy,e as proxyMarker,c as transfer,a as transferHandlers,p as windowEndpoint,s as wrap};
//# sourceMappingURL=comlink.min.mjs.map
